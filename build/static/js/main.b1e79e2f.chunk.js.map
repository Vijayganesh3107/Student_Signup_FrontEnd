{"version":3,"sources":["logo.svg","serviceWorker.js","routes.js","Components/Navbar.js","Components/Signuppage.js","Components/Dashboard.js","Components/Edit-page.js","Components/DeletePage.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","routes","home","dashboard","edit","delete","NavbarHeader","props","useState","isOpen","setIsOpen","className","Navbar","color","light","expand","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","SignupPage","countries","require","getNames","history","useHistory","name","setName","email","setEmail","country","setCountry","city","setCity","state","setState","address1","setAddress1","address2","setAddress2","gender","setGender","maritalstatus","setMarital","food","setFood","setColor","visible","setVisible","handleGenderChange","e","target","value","PostData","a","bodydata","fetch","method","body","JSON","stringify","headers","req","json","data","message","push","alert","Form","Row","form","Col","xl","Label","Input","type","onChange","map","index","key","Button","Alert","Dashboard","datas","setDatas","useEffect","then","res","data1","handleEditClick","id","localStorage","setItem","replace","handleDeleteClick","Table","striped","item","EditPage","databyid","setDatabyid","getItem","EditData","DeletePage","DeleteAction","App","path","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b1e79e2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const routes={\r\n    home:\"/\",\r\n    dashboard:\"/dashboard\",\r\n    edit:\"/dashboard/edit/:emailid\",\r\n    delete:\"/dashboard/delete/:emailid\"\r\n}\r\n\r\nexport default routes;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\nimport routes from '../routes';\r\n\r\nconst NavbarHeader = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <Link className=\"navbar-brand\" to={routes.home}>Student Signup</Link>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <Link className=\"nav-link\" to={routes.dashboard}>Dashboard</Link>\r\n            </NavItem>\r\n            \r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarHeader;\r\n","import React, { Fragment,useState,useEffect } from 'react';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input,Select,Options,Alert } from 'reactstrap';\r\nimport {useHistory} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport routes from \"../routes\"\r\nimport NavbarHeader from \"./Navbar\"\r\n\r\nconst SignupPage = () => {\r\n    const countryList = require('country-list');\r\n    const countries=countryList.getNames();\r\n    const history=useHistory();\r\n    const [name,setName]=useState('');\r\n    const[email,setEmail]=useState('');\r\n    const[country,setCountry]=useState('');\r\n    const[city,setCity]=useState('');\r\n    const[state,setState]=useState('');\r\n    const[address1,setAddress1]=useState('');\r\n    const[address2,setAddress2]=useState('');\r\n    const [gender,setGender]=useState('');\r\n    const[maritalstatus,setMarital]=useState('');\r\n    const[food,setFood]=useState('')\r\n    const[color,setColor]=useState('')\r\n    const [visible, setVisible] = useState(false);\r\n   \r\n    \r\n        \r\n        \r\n      \r\n        \r\n\r\n    const handleNameChange=(e)=>{\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handleEmailChange=(e)=>{\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const handleCountryChange=(e)=>{\r\n        setCountry(e.target.value);\r\n\r\n    }\r\n\r\n   const handleCityChange=(e)=>{\r\n       setCity(e.target.value)\r\n   }\r\n\r\n   const handleStateChange=(e)=>{\r\n    setState(e.target.value)\r\n}\r\n\r\nconst handleAddress1Change=(e)=>{\r\n    setAddress1(e.target.value)\r\n}\r\nconst handleAddress2Change=(e)=>{\r\n    setAddress2(e.target.value)\r\n}\r\n\r\nconst handleGenderChange=(e)=>{\r\n    setGender(e.target.value)\r\n}\r\n\r\nconst handleMaritalChange=(e)=>{\r\n    setMarital(e.target.value)\r\n}\r\n\r\nconst handleFoodChange=(e)=>{\r\n    setFood(e.target.value)\r\n}\r\nconst handleColorChange=(e)=>{\r\n    setColor(e.target.value)\r\n}\r\n\r\nconst  PostData= async()=>{\r\n    var bodydata={\r\n        name,\r\n        email,\r\n        country,\r\n        city,\r\n        state,\r\n        address1,\r\n        address2,\r\n        gender,\r\n        maritalstatus,\r\n        food,\r\n        color\r\n\r\n    }\r\n    var req=await fetch(\"https://student-signup-app-react.herokuapp.com/add-details\",{\r\n        method:\"POST\",\r\n        body:JSON.stringify(bodydata),\r\n        headers:{\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n    var data= await req.json();\r\n    \r\n    if(data.message==\"Data Inserted to the db\")\r\n    {   \r\n        setVisible(true);\r\n      history.push(routes.dashboard)\r\n    }\r\n    else{\r\n        alert(data.message)\r\n    }\r\n}\r\n\r\n  return (\r\n    <>\r\n    <NavbarHeader />\r\n    <h1 className=\"text-center\">Signup Page</h1>\r\n        <Form className=\"container mt-5\">\r\n            <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>Name:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Input type=\"text\" value={name} onChange={handleNameChange}></Input>\r\n                    </Col>          \r\n                </Row>\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6}  className=\"text-center\">\r\n                    <Label>Email:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Input type=\"email\" value={email} onChange={handleEmailChange}></Input>\r\n                    </Col>          \r\n                </Row>\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>Country:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                     <Input type=\"select\" onChange={handleCountryChange}>\r\n                     <option value=\"\">Select a Country</option>\r\n                     {countries.map((country,index)=>{\r\n                         return(\r\n                             <option key={index}>{country}</option>\r\n                         )\r\n                     })}\r\n                     {/* <option value=\"India\">India</option>\r\n                     <option value=\"USA\">USA</option>\r\n                     <option value=\"UK\">UK</option>\r\n                     <option value=\"Australia\">Australia</option>\r\n                     <option value=\"South Africa\">South Africa</option>\r\n                     <option value=\"Srilanka\">Sri Lanka</option>\r\n                     <option value=\"Pakistan\">Pakistan</option> */}\r\n                    </Input> \r\n                    </Col>          \r\n                </Row>\r\n\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>City:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Input type=\"text\" value={city} onChange={handleCityChange}>\r\n                    </Input>\r\n                    </Col>          \r\n                </Row>\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>State:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Input type=\"text\" value={state} onChange={handleStateChange}></Input>\r\n                    </Col>          \r\n                </Row>\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>Address Line1:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Input type=\"text\" value={address1} onChange={handleAddress1Change}></Input>\r\n                    </Col>          \r\n                </Row>\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>Address Line 2:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Input type=\"text\" value={address2} onChange={handleAddress2Change}></Input>\r\n                    </Col>          \r\n                </Row>\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>Gender</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Label>Male</Label>\r\n                    <Input type=\"radio\" value=\"male\" name=\"gender\"className=\"ml-4\" onChange={handleGenderChange} ></Input>\r\n                    <Label className=\"ml-5\">Female</Label>\r\n                    <Input type=\"radio\" value=\"female\" name=\"gender\" className=\"ml-4\"  onChange={handleGenderChange} ></Input>\r\n                    <Label className=\"ml-5\">Other</Label>\r\n                    <Input type=\"radio\" value=\"other\" name=\"gender\" className=\"ml-4\"  onChange={handleGenderChange} ></Input>\r\n                    </Col>        \r\n                </Row>\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>Marital Status:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Input type=\"select\" onChange={handleMaritalChange}>\r\n                        <option value=\"\">Select Marital Status</option>\r\n                        <option value=\"single\">Single</option>\r\n                        <option value=\"married\">Married</option>\r\n                    </Input>\r\n                    </Col>          \r\n                </Row>\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>Favorite Food:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Input type=\"text\" value={food} onChange={handleFoodChange}></Input>\r\n                    </Col>          \r\n                </Row>\r\n                <Row form className=\"mb-3\">\r\n                <Col xl={6} className=\"text-center\">\r\n                    <Label>Favorite Color:</Label>\r\n                    </Col>\r\n                    <Col xl={3}> \r\n                    <Input type=\"text\" value={color} onChange={handleColorChange}></Input>\r\n                    </Col>          \r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                <Button color=\"success\"  onClick={PostData} >Submit</Button>\r\n                </Row>\r\n               </Form>\r\n                <Alert color=\"info\" isOpen={visible}>\r\n                I am an alert and I can be dismissed!\r\n                </Alert>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default SignupPage;","import React, { Fragment,useState,useEffect } from 'react';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input,Select,Options,Alert,Table } from 'reactstrap';\r\nimport {useHistory,Link} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport routes from \"../routes\"\r\nimport NavbarHeader from \"./Navbar\"\r\nimport \"../Styles/DashboardStyle.css\"\r\n\r\n\r\nconst Dashboard=()=>{\r\n\r\n     const[datas,setDatas]=useState([]);\r\n     const history=useHistory();\r\n\r\n\r\n     useEffect(()=>{\r\n         fetch(\"https://student-signup-app-react.herokuapp.com/get-details\")\r\n         .then(res=>res.json())\r\n         .then(data1=>{\r\n             setDatas(data1);\r\n         })\r\n     },[])\r\n\r\n     const handleEditClick=(e)=>{\r\n          var id= e.target.id;\r\n          localStorage.setItem(\"id\",id);\r\n         history.push(routes.edit.replace(\":emailid\",id));      \r\n     }\r\n     const handleDeleteClick=(e)=>{\r\n        var id= e.target.id;\r\n        localStorage.setItem(\"Deleteid\",id);\r\n       history.push(routes.delete.replace(\":emailid\",id));      \r\n   }\r\n\r\n    return(\r\n        <>\r\n        <NavbarHeader className=\"container-fluid\"></NavbarHeader>\r\n        <h1 className=\"text-center\">Dashboard</h1>\r\n        <Table striped className=\"table  container mt-5 dashboard\">\r\n        <thead>\r\n          <tr>\r\n              <th>Id</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Country</th>\r\n            <th>State</th>\r\n            <th>City</th>\r\n            <th>Address Line 1</th>\r\n            <th>Address Line 2</th>\r\n            <th>Gender</th>\r\n            <th>Marital Status</th>\r\n            <th>Favorite Food</th>\r\n            <th>Favorite Color</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {datas.map((item,index)=>{\r\n              return(\r\n                  <tr key={index}>\r\n                      <td>{index+1}</td>\r\n                      <td>{item.name}</td>\r\n                      <td>{item.email}</td>\r\n                      <td>{item.country}</td>\r\n                      <td>{item.state}</td>\r\n                      <td>{item.city}</td>\r\n                      <td>{item.address1}</td>\r\n                      <td>{item.address2}</td>\r\n                      <td>{item.gender}</td>\r\n                      <td>{item.maritalstatus}</td>\r\n                      <td>{item.food}</td>\r\n                      <td>{item.color}</td>\r\n                      <td>\r\n                          <Button color=\"primary\"   onClick={handleEditClick}  id={item.email}>Edit</Button>\r\n                      </td>\r\n                      <td>\r\n                          <Button color=\"danger\" onClick={handleDeleteClick} id={item.email}>Delete</Button>\r\n                      </td>\r\n                  </tr>\r\n              )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      </>\r\n   \r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React, { Fragment,useState,useEffect } from 'react';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input,Select,Options,Alert } from 'reactstrap';\r\nimport {useHistory,Link} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport routes from \"../routes\"\r\nimport id from \"./Signuppage\"\r\nimport NavbarHeader from \"./Navbar\"\r\n\r\nconst EditPage=()=>{\r\n    const countryList = require('country-list');\r\n    const countries=countryList.getNames();\r\n    const history=useHistory();\r\n    \r\n    const[databyid,setDatabyid]=useState([]);\r\n    const [name,setName]=useState(databyid.name);\r\n    const[email,setEmail]=useState(databyid.email);\r\n    const[country,setCountry]=useState('');\r\n    const[city,setCity]=useState('');\r\n    const[state,setState]=useState('');\r\n    const[address1,setAddress1]=useState('');\r\n    const[address2,setAddress2]=useState('');\r\n    const [gender,setGender]=useState('');\r\n    const[maritalstatus,setMarital]=useState('');\r\n    const[food,setFood]=useState('')\r\n    const[color,setColor]=useState('')\r\n   \r\n    \r\n    let id=localStorage.getItem(\"id\");\r\n    \r\n\r\n    useEffect(()=>{\r\n         fetch(\"https://student-signup-app-react.herokuapp.com/get-details/\"+id).then(res=>res.json()).then(data=>{\r\n            setDatabyid(data);\r\n         })\r\n         \r\n        \r\n    },[])\r\n\r\n\r\n\r\n\r\n   \r\n\r\n\r\n    // const handleNameChange=(e)=>{\r\n    //     setName(e.target.value)\r\n    // }\r\n\r\n    // const handleEmailChange=(e)=>{\r\n    //     setEmail(e.target.value)\r\n    // }\r\n\r\n    const handleCountryChange=(e)=>{\r\n        setCountry(e.target.value);\r\n\r\n    }\r\n\r\n   const handleCityChange=(e)=>{\r\n       setCity(e.target.value)\r\n   }\r\n\r\n   const handleStateChange=(e)=>{\r\n    setState(e.target.value)\r\n}\r\n\r\nconst handleAddress1Change=(e)=>{\r\n    setAddress1(e.target.value)\r\n}\r\nconst handleAddress2Change=(e)=>{\r\n    setAddress2(e.target.value)\r\n}\r\n\r\nconst handleGenderChange=(e)=>{\r\n    setGender(e.target.value)\r\n}\r\n\r\nconst handleMaritalChange=(e)=>{\r\n    setMarital(e.target.value)\r\n}\r\n\r\nconst handleFoodChange=(e)=>{\r\n    setFood(e.target.value)\r\n}\r\nconst handleColorChange=(e)=>{\r\n    setColor(e.target.value)\r\n}\r\n\r\n\r\n\r\n\r\nconst EditData=async()=>{\r\n    let bodydata={\r\n        name:databyid.name,\r\n        email:databyid.email,\r\n        country,\r\n        city,\r\n        state,\r\n        address1,\r\n        address2,\r\n        gender,\r\n        maritalstatus,\r\n        food,\r\n        color\r\n    }\r\n     let res=await fetch(\"https://student-signup-app-react.herokuapp.com/edit-details/\"+databyid.email,{\r\n         method:\"PUT\",\r\n         body:JSON.stringify(bodydata),\r\n         headers:{\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n     })\r\n     let data=await res.json();\r\n     if(data.message==\"Data successfully updated\"){\r\n         history.push(routes.dashboard)\r\n     }\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <NavbarHeader />\r\n        <h1 className=\"text-center\">Edit Page</h1>\r\n            <Form className=\"container mt-5\">\r\n                <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Name:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={databyid.name} ></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6}  className=\"text-center\">\r\n                        <Label>Email:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"email\" value={databyid.email}></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Country:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"select\" onChange={handleCountryChange}>\r\n                     <option value=\"\">Select a Country</option>\r\n                     {countries.map((country,index)=>{\r\n                         return(\r\n                             <option key={index}>{country}</option>\r\n                         )\r\n                     })}\r\n                     </Input>\r\n                        </Col>          \r\n                    </Row>\r\n    \r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>City:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={city} onChange={handleCityChange}>\r\n                        </Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>State:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={state} onChange={handleStateChange}></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Address Line1:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={address1} onChange={handleAddress1Change}></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Address Line 2:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={address2} onChange={handleAddress2Change}></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Gender</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Label>Male</Label>\r\n                        <Input type=\"radio\" value=\"male\" name=\"gender\"className=\"ml-4\" onChange={handleGenderChange} ></Input>\r\n                        <Label className=\"ml-5\">Female</Label>\r\n                        <Input type=\"radio\" value=\"female\" name=\"gender\" className=\"ml-4\"  onChange={handleGenderChange} ></Input>\r\n                        <Label className=\"ml-5\">Other</Label>\r\n                        <Input type=\"radio\" value=\"other\" name=\"gender\" className=\"ml-4\"  onChange={handleGenderChange} ></Input>\r\n                        </Col>        \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Marital Status:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"select\" onChange={handleMaritalChange}>\r\n                            <option value=\"\">Select Marital Status</option>\r\n                            <option value=\"single\">Single</option>\r\n                            <option value=\"married\">Married</option>\r\n                        </Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Favorite Food:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={food} onChange={handleFoodChange}></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Favorite Color:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={color} onChange={handleColorChange}></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                    <Button color=\"success\"  onClick={EditData} >Edit</Button>\r\n                    <Link className=\"ml-5\" to={routes.dashboard}>Go to Dashboard</Link>\r\n                    </Row>\r\n                   </Form>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default EditPage","import React, { Fragment,useState,useEffect } from 'react';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input,Select,Options,Alert } from 'reactstrap';\r\nimport {useHistory} from \"react-router-dom\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport routes from \"../routes\"\r\nimport id from \"./Signuppage\"\r\nimport NavbarHeader from \"./Navbar\"\r\n\r\n\r\nconst DeletePage=()=>{\r\n    const countryList = require('country-list');\r\n    const countries=countryList.getNames();\r\n    const history=useHistory(); \r\n    let id=localStorage.getItem(\"Deleteid\");\r\n    const[databyid,setDatabyid]=useState([]);\r\n    \r\n\r\n    useEffect(()=>{\r\n         fetch(\"https://student-signup-app-react.herokuapp.com/get-details/\"+id).then(res=>res.json()).then(data=>{\r\n            setDatabyid(data);\r\n         })\r\n         \r\n        \r\n    },[])\r\n\r\n\r\n\r\nconst DeleteAction=async()=>{\r\n     let res=await fetch(\"https://student-signup-app-react.herokuapp.com/delete/\"+databyid.email,{\r\n         method:\"DELETE\",\r\n         headers:{\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n     })\r\n     let data=await res.json();\r\n     if(data.message==\"Data Removed\"){\r\n         history.push(routes.dashboard)\r\n     }\r\n     else{\r\n         alert(data.message)\r\n     }\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <NavbarHeader />\r\n        <h1 className=\"text-center\">Deleted Item Info</h1>\r\n            <Form className=\"container mt-5\">\r\n                <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Name:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={databyid.name} ></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6}  className=\"text-center\">\r\n                        <Label>Email:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"email\" value={databyid.email}></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Country:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                         <Input type=\"select\" value={databyid.country}>\r\n                     <option value=\"\">Select a Country</option>\r\n                     {countries.map((country,index)=>{\r\n                         return(\r\n                             <option key={index}>{country}</option>\r\n                         )\r\n                     })}\r\n                        </Input> \r\n                        </Col>          \r\n                    </Row>\r\n    \r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>City:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={databyid.city}>\r\n                        </Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>State:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={databyid.state} ></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Address Line1:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={databyid.address1} ></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Address Line 2:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={databyid.address2} ></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Gender</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Label>Male</Label>\r\n                        <Input type=\"radio\" value=\"male\" name=\"gender\"className=\"ml-4\"  ></Input>\r\n                        <Label className=\"ml-5\">Female</Label>\r\n                        <Input type=\"radio\" value=\"female\" name=\"gender\" className=\"ml-4\"   ></Input>\r\n                        <Label className=\"ml-5\">Other</Label>\r\n                        <Input type=\"radio\" value=\"other\" name=\"gender\" className=\"ml-4\"   ></Input>\r\n                        </Col>        \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Marital Status:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"select\" value={databyid.maritalstatus}>\r\n                            <option value=\"\">Select Marital Status</option>\r\n                            <option value=\"single\">Single</option>\r\n                            <option value=\"married\">Married</option>\r\n                        </Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Favorite Food:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={databyid.food} ></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row form className=\"mb-3\">\r\n                    <Col xl={6} className=\"text-center\">\r\n                        <Label>Favorite Color:</Label>\r\n                        </Col>\r\n                        <Col xl={3}> \r\n                        <Input type=\"text\" value={databyid.color}></Input>\r\n                        </Col>          \r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                    <Button color=\"danger\"  onClick={DeleteAction} >Delete</Button>\r\n                    </Row>\r\n                   </Form>\r\n        </>\r\n      );\r\n}\r\n\r\nexport default DeletePage;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport SignupPage from \"./Components/Signuppage\"\r\nimport {Switch,Route} from \"react-router-dom\"\r\nimport routes from \"./routes\"\r\nimport Dashboard from './Components/Dashboard';\r\nimport EditPage from \"./Components/Edit-page\"\r\nimport DeletePage from \"./Components/DeletePage\"\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Switch>\r\n      <Route path={routes.edit}>\r\n      <EditPage/>\r\n      </Route>\r\n\r\n      <Route path={routes.delete}>\r\n      <DeletePage/>\r\n      </Route>\r\n\r\n      <Route path={routes.dashboard}>\r\n        <Dashboard />\r\n      </Route>\r\n\r\n      <Route path={routes.home}>\r\n        <SignupPage />\r\n      </Route>\r\n      \r\n    </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}